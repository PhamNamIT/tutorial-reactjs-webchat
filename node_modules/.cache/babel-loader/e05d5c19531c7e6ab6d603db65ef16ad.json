{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\NamPham\\\\Documents\\\\ReactJS\\\\webchat\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\NamPham\\\\Documents\\\\ReactJS\\\\webchat\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport firebase, { db } from './config';\nexport var addDocument = function addDocument(collection, data) {\n  var query = db.collection(collection);\n  query.add(_objectSpread({}, data, {\n    createAt: firebase.firestore.FieldValue.serverTimestamp()\n  }));\n};\nexport var generateKeywords = function generateKeywords(displayName) {\n  // liet ke cac hoan vi: vd: name = ['Pham', 'Ngoc', 'Nam']\n  // => ['Ngoc', 'Nam', 'Pham'], ['Pham', 'Nam', 'Ngoc'], ['Nam', 'Ngoc', 'Pham'], ...\n  var name = displayName.split(' ').filter(function (word) {\n    return word;\n  });\n  console.log({\n    name: name\n  });\n  var length = name.length;\n  var flagArray = [];\n  var result = [];\n  var stringArray = [];\n\n  for (var i = 0; i < length; i++) {\n    flagArray[i] = false;\n  }\n\n  var createKeywords = function createKeywords(name) {\n    var arrName = [];\n    var curName = '';\n    name.split('').forEach(function (letter) {\n      curName += letter;\n      arrName.push(curName);\n    });\n    return arrName;\n  };\n\n  function findPermutation(k) {\n    for (var _i = 0; _i < length; _i++) {\n      if (!flagArray[_i]) {\n        flagArray[_i] = true;\n        result[k] = name[_i];\n\n        if (k === length - 1) {\n          stringArray.push(result.join(' '));\n        }\n\n        findPermutation(k + 1);\n        flagArray[_i] = false;\n      }\n    }\n  }\n\n  findPermutation(0);\n  var keywords = stringArray.reduce(function (acc, cur) {\n    var words = createKeywords(cur);\n    return [].concat(_toConsumableArray(acc), _toConsumableArray(words));\n  }, []);\n  return keywords;\n};","map":{"version":3,"names":["firebase","db","addDocument","collection","data","query","add","createAt","firestore","FieldValue","serverTimestamp","generateKeywords","displayName","name","split","filter","word","console","log","length","flagArray","result","stringArray","i","createKeywords","arrName","curName","forEach","letter","push","findPermutation","k","join","keywords","reduce","acc","cur","words"],"sources":["C:/Users/NamPham/Documents/ReactJS/webchat/src/firebase/services.js"],"sourcesContent":["import firebase, { db } from './config';\r\n\r\nexport const addDocument = (collection, data) => {\r\n   const query = db.collection(collection);\r\n\r\n   query.add({\r\n      ...data,\r\n      createAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n   })\r\n};\r\n\r\nexport const generateKeywords = (displayName) => {\r\n   // liet ke cac hoan vi: vd: name = ['Pham', 'Ngoc', 'Nam']\r\n   // => ['Ngoc', 'Nam', 'Pham'], ['Pham', 'Nam', 'Ngoc'], ['Nam', 'Ngoc', 'Pham'], ...\r\n   const name = displayName.split(' ').filter((word) => word);\r\n\r\n   console.log({ name });\r\n\r\n   const length = name.length;\r\n   let flagArray = [];\r\n   let result = [];\r\n   let stringArray = [];\r\n\r\n   for (let i = 0; i < length; i++) {\r\n      flagArray[i] = false;\r\n   }\r\n\r\n   const createKeywords = (name) => {\r\n      const arrName = [];\r\n      let curName = '';\r\n      name.split('').forEach((letter) => {\r\n         curName += letter;\r\n         arrName.push(curName);\r\n      })\r\n\r\n      return arrName;\r\n   }\r\n\r\n   function findPermutation(k) {\r\n      for (let i = 0; i < length; i++) {\r\n         if (!flagArray[i]) {\r\n            flagArray[i] = true;\r\n            result[k] = name[i];\r\n\r\n            if (k === length - 1) {\r\n               stringArray.push(result.join(' '));\r\n            }\r\n\r\n            findPermutation(k + 1);\r\n            flagArray[i] = false;\r\n         }\r\n      }\r\n   }\r\n\r\n   findPermutation(0);\r\n\r\n   const keywords = stringArray.reduce((acc, cur) => {\r\n      const words = createKeywords(cur);\r\n      return [...acc, ...words];\r\n   }, []);\r\n\r\n   return keywords;\r\n}"],"mappings":";;AAAA,OAAOA,QAAP,IAAmBC,EAAnB,QAA6B,UAA7B;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,UAAD,EAAaC,IAAb,EAAsB;EAC9C,IAAMC,KAAK,GAAGJ,EAAE,CAACE,UAAH,CAAcA,UAAd,CAAd;EAEAE,KAAK,CAACC,GAAN,mBACMF,IADN;IAEGG,QAAQ,EAAEP,QAAQ,CAACQ,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B;EAFb;AAIF,CAPM;AASP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,WAAD,EAAiB;EAC9C;EACA;EACA,IAAMC,IAAI,GAAGD,WAAW,CAACE,KAAZ,CAAkB,GAAlB,EAAuBC,MAAvB,CAA8B,UAACC,IAAD;IAAA,OAAUA,IAAV;EAAA,CAA9B,CAAb;EAEAC,OAAO,CAACC,GAAR,CAAY;IAAEL,IAAI,EAAJA;EAAF,CAAZ;EAEA,IAAMM,MAAM,GAAGN,IAAI,CAACM,MAApB;EACA,IAAIC,SAAS,GAAG,EAAhB;EACA,IAAIC,MAAM,GAAG,EAAb;EACA,IAAIC,WAAW,GAAG,EAAlB;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAApB,EAA4BI,CAAC,EAA7B,EAAiC;IAC9BH,SAAS,CAACG,CAAD,CAAT,GAAe,KAAf;EACF;;EAED,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACX,IAAD,EAAU;IAC9B,IAAMY,OAAO,GAAG,EAAhB;IACA,IAAIC,OAAO,GAAG,EAAd;IACAb,IAAI,CAACC,KAAL,CAAW,EAAX,EAAea,OAAf,CAAuB,UAACC,MAAD,EAAY;MAChCF,OAAO,IAAIE,MAAX;MACAH,OAAO,CAACI,IAAR,CAAaH,OAAb;IACF,CAHD;IAKA,OAAOD,OAAP;EACF,CATD;;EAWA,SAASK,eAAT,CAAyBC,CAAzB,EAA4B;IACzB,KAAK,IAAIR,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGJ,MAApB,EAA4BI,EAAC,EAA7B,EAAiC;MAC9B,IAAI,CAACH,SAAS,CAACG,EAAD,CAAd,EAAmB;QAChBH,SAAS,CAACG,EAAD,CAAT,GAAe,IAAf;QACAF,MAAM,CAACU,CAAD,CAAN,GAAYlB,IAAI,CAACU,EAAD,CAAhB;;QAEA,IAAIQ,CAAC,KAAKZ,MAAM,GAAG,CAAnB,EAAsB;UACnBG,WAAW,CAACO,IAAZ,CAAiBR,MAAM,CAACW,IAAP,CAAY,GAAZ,CAAjB;QACF;;QAEDF,eAAe,CAACC,CAAC,GAAG,CAAL,CAAf;QACAX,SAAS,CAACG,EAAD,CAAT,GAAe,KAAf;MACF;IACH;EACH;;EAEDO,eAAe,CAAC,CAAD,CAAf;EAEA,IAAMG,QAAQ,GAAGX,WAAW,CAACY,MAAZ,CAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;IAC/C,IAAMC,KAAK,GAAGb,cAAc,CAACY,GAAD,CAA5B;IACA,oCAAWD,GAAX,sBAAmBE,KAAnB;EACF,CAHgB,EAGd,EAHc,CAAjB;EAKA,OAAOJ,QAAP;AACF,CAnDM"},"metadata":{},"sourceType":"module"}