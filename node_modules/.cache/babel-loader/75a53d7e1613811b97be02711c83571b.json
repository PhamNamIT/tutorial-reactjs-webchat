{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\NamPham\\\\Documents\\\\ReactJS\\\\webchat\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\NamPham\\\\Documents\\\\ReactJS\\\\webchat\\\\src\\\\Context\\\\AppProvider.js\";\n\nimport React, { createContext, useContext, useMemo, useState } from 'react';\nimport { AuthContext } from './AuthProvider';\nimport useFirestore from '../hooks/useFirestore';\nexport var AppContext = createContext();\n\nvar AppProvider = function AppProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAddRoomVisible = _useState2[0],\n      setIsAddRoomVisible = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedRoomId = _useState4[0],\n      setSelectedRoomId = _useState4[1];\n\n  var _useContext = useContext(AuthContext),\n      uid = _useContext.user.uid; // Document room\n  // {\n  //    name: 'room name',\n  //    description: 'mo ta',\n  //    members: [uid1, uid2, ...]\n  // }\n\n\n  var roomsCondittion = useMemo(function () {\n    return {\n      fieldName: 'member',\n      operator: 'array-contains',\n      compareValue: uid\n    };\n  }, [uid]);\n  var rooms = useFirestore('rooms', roomsCondittion);\n  var selectedRoom = useMemo(function () {\n    return rooms.find(function (room) {\n      return room.id === selectedRoomId;\n    });\n  }, [rooms, selectedRoomId]);\n  console.log(selectedRoom);\n  var usersCondittion = useMemo(function () {\n    return {\n      fieldName: 'uid',\n      operator: 'in',\n      compareValue: selectedRoom.member\n    };\n  }, [selectedRoom.member]);\n  var members = useFirestore('users', usersCondittion);\n  console.log(members);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      rooms: rooms,\n      selectedRoom: selectedRoom,\n      isAddRoomVisible: isAddRoomVisible,\n      setIsAddRoomVisible: setIsAddRoomVisible,\n      selectedRoomId: selectedRoomId,\n      setSelectedRoomId: setSelectedRoomId\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, children);\n};\n\nexport default AppProvider;","map":{"version":3,"names":["React","createContext","useContext","useMemo","useState","AuthContext","useFirestore","AppContext","AppProvider","children","isAddRoomVisible","setIsAddRoomVisible","selectedRoomId","setSelectedRoomId","uid","user","roomsCondittion","fieldName","operator","compareValue","rooms","selectedRoom","find","room","id","console","log","usersCondittion","member","members"],"sources":["C:/Users/NamPham/Documents/ReactJS/webchat/src/Context/AppProvider.js"],"sourcesContent":["import React, { createContext, useContext, useMemo, useState } from 'react';\r\nimport { AuthContext} from './AuthProvider';\r\nimport useFirestore from '../hooks/useFirestore';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n   const [isAddRoomVisible, setIsAddRoomVisible] = useState(false);\r\n   const [selectedRoomId, setSelectedRoomId] = useState('');\r\n   const { user: { uid } } = useContext(AuthContext);\r\n\r\n   // Document room\r\n   // {\r\n   //    name: 'room name',\r\n   //    description: 'mo ta',\r\n   //    members: [uid1, uid2, ...]\r\n   // }\r\n   const roomsCondittion = useMemo(() => {\r\n      return {\r\n         fieldName: 'member',\r\n         operator: 'array-contains',\r\n         compareValue: uid\r\n      };\r\n   }, [uid]);\r\n\r\n   const rooms = useFirestore('rooms', roomsCondittion);\r\n\r\n   const selectedRoom = useMemo(() => \r\n      rooms.find((room) => room.id === selectedRoomId),\r\n      [rooms, selectedRoomId]\r\n   );\r\n\r\n   console.log(selectedRoom);\r\n\r\n   const usersCondittion = useMemo(() => {\r\n      return {\r\n         fieldName: 'uid',\r\n         operator: 'in',\r\n         compareValue: selectedRoom.member\r\n      };\r\n   }, [selectedRoom.member]);\r\n\r\n   const members = useFirestore('users', usersCondittion);\r\n\r\n   console.log(members);\r\n\r\n   return ( \r\n      <AppContext.Provider \r\n         value={{ \r\n            rooms,\r\n            selectedRoom,\r\n            isAddRoomVisible,\r\n            setIsAddRoomVisible,\r\n            selectedRoomId,\r\n            setSelectedRoomId\r\n         }}\r\n      >\r\n         {children}\r\n      </AppContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AppProvider;"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,OAA3C,EAAoDC,QAApD,QAAoE,OAApE;AACA,SAASC,WAAT,QAA2B,gBAA3B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,OAAO,IAAMC,UAAU,GAAGN,aAAa,EAAhC;;AAEP,IAAMO,WAAW,GAAG,SAAdA,WAAc,OAAkB;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EAAA,gBACaL,QAAQ,CAAC,KAAD,CADrB;EAAA;EAAA,IAC5BM,gBAD4B;EAAA,IACVC,mBADU;;EAAA,iBAESP,QAAQ,CAAC,EAAD,CAFjB;EAAA;EAAA,IAE5BQ,cAF4B;EAAA,IAEZC,iBAFY;;EAAA,kBAGTX,UAAU,CAACG,WAAD,CAHD;EAAA,IAGnBS,GAHmB,eAG3BC,IAH2B,CAGnBD,GAHmB,EAKnC;EACA;EACA;EACA;EACA;EACA;;;EACA,IAAME,eAAe,GAAGb,OAAO,CAAC,YAAM;IACnC,OAAO;MACJc,SAAS,EAAE,QADP;MAEJC,QAAQ,EAAE,gBAFN;MAGJC,YAAY,EAAEL;IAHV,CAAP;EAKF,CAN8B,EAM5B,CAACA,GAAD,CAN4B,CAA/B;EAQA,IAAMM,KAAK,GAAGd,YAAY,CAAC,OAAD,EAAUU,eAAV,CAA1B;EAEA,IAAMK,YAAY,GAAGlB,OAAO,CAAC;IAAA,OAC1BiB,KAAK,CAACE,IAAN,CAAW,UAACC,IAAD;MAAA,OAAUA,IAAI,CAACC,EAAL,KAAYZ,cAAtB;IAAA,CAAX,CAD0B;EAAA,CAAD,EAEzB,CAACQ,KAAD,EAAQR,cAAR,CAFyB,CAA5B;EAKAa,OAAO,CAACC,GAAR,CAAYL,YAAZ;EAEA,IAAMM,eAAe,GAAGxB,OAAO,CAAC,YAAM;IACnC,OAAO;MACJc,SAAS,EAAE,KADP;MAEJC,QAAQ,EAAE,IAFN;MAGJC,YAAY,EAAEE,YAAY,CAACO;IAHvB,CAAP;EAKF,CAN8B,EAM5B,CAACP,YAAY,CAACO,MAAd,CAN4B,CAA/B;EAQA,IAAMC,OAAO,GAAGvB,YAAY,CAAC,OAAD,EAAUqB,eAAV,CAA5B;EAEAF,OAAO,CAACC,GAAR,CAAYG,OAAZ;EAEA,oBACG,oBAAC,UAAD,CAAY,QAAZ;IACG,KAAK,EAAE;MACJT,KAAK,EAALA,KADI;MAEJC,YAAY,EAAZA,YAFI;MAGJX,gBAAgB,EAAhBA,gBAHI;MAIJC,mBAAmB,EAAnBA,mBAJI;MAKJC,cAAc,EAAdA,cALI;MAMJC,iBAAiB,EAAjBA;IANI,CADV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAUIJ,QAVJ,CADH;AAcF,CAtDD;;AAwDA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}